<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	  <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

    <Compile Include="MainTemplate.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MainTemplate.tt</DependentUpon>
    </Compile>

	<ItemGroup>
	  <None Include="TemplateIncludes.tt" /> 
	  <None Include="MainTemplate.tt" >
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>MainTemplate.cs</LastGenOutput>
	  </None>
	</ItemGroup>

	
	<ItemGroup>
		<Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
	</ItemGroup>

	<ItemGroup>
		<T4ParameterValues Include="ProjectDir">
			<Value>$(ProjectDir)</Value>
			<Visible>False</Visible>
		</T4ParameterValues>
		<T4ParameterValues Include="UserProfile">
			<Value>$(UserProfile)</Value>
			<Visible>False</Visible>
		</T4ParameterValues>
	</ItemGroup>
	<PropertyGroup>
		<VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
		<!-- This is what will cause the templates to be transformed when the project is built (default is false) -->
		<TransformOnBuild>true</TransformOnBuild>
		<!-- Set to true to force overwriting of read-only output files, e.g. if they're not checked out (default is false) -->
		<OverwriteReadOnlyOutputFiles>true</OverwriteReadOnlyOutputFiles>
		<!-- Set to false to transform files even if the output appears to be up-to-date (default is true) -->
		<TransformOutOfDateOnly>false</TransformOutOfDateOnly>
	</PropertyGroup>
	<Import Project="$(VSToolsPath)\TextTemplating\Microsoft.TextTemplating.targets" />
</Project>
